version: 2
jobs:
  build:
    
    working_directory: /tmp/circleci-demo-java-spring

    docker:
      - image: circleci/openjdk:8-jdk-browsers
      - image: circleci/postgres:9.6.3-alpine
        environment:
          POSTGRES_USER: root
          POSTGRES_DB: circle_test

    steps:

      - checkout

      - restore_cache:
          key: circleci-demo-java-spring-{{ checksum "pom.xml" }}
      
      - run: mvn dependency:go-offline
      
      - save_cache:
          paths:
            - ~/.m2
          key: circleci-demo-java-spring-{{ checksum "pom.xml" }}
      
      - run: mvn package
      
      - store_test_results:
          path: target/surefire-reports
      
      - store_artifacts:
          path: target/demo-java-spring-0.0.1-SNAPSHOT.jar

  deploy:

    working_directory: /tmp/circleci-demo-java-spring

    docker:
      - image: circleci/openjdk:8-jdk-browsers
      - image: circleci/postgres:9.6.3-alpine

    steps:
      - run:
          name: Run setup script
          command: |
wget https://cli-assets.heroku.com/branches/stable/heroku-linux-amd64.tar.gz
sudo mkdir -p /usr/local/lib /usr/local/bin
sudo tar -xvzf heroku-linux-amd64.tar.gz -C /usr/local/lib
sudo ln -s /usr/local/lib/heroku/bin/heroku /usr/local/bin/heroku

cat > ~/.netrc << EOF
  machine api.heroku.com
    login $HEROKU_LOGIN
    password $HEROKU_API_KEY
  EOF

cat >> ~/.ssh/config << EOF
  VerifyHostKeyDNS yes
  StrictHostKeyChecking no
  EOF

      - add_ssh_keys:
          fingerprints:
            - "fa:49:ca:3a:f3:48:9b:e5:02:f3:07:c3:4b:23:95:f4"

      - run:
          name: Deploy Master to Heroku
          command: |
            git push --force git@heroku.com:$HEROKU_APP_NAME.git HEAD:refs/heads/master
            heroku run python manage.py deploy
            heroku restart
               
workflows:
   version: 2
   build-deploy:
     jobs:
       - build
       - deploy:
           requires:
             - build
           filters:
             branches:
               only: master

